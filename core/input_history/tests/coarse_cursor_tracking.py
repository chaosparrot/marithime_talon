from ..cursor_position_tracker import CursorPositionTracker, _CURSOR_MARKER
from ..input_history import InputHistoryManager
from ..input_history_typing import InputHistoryEvent

input_history = InputHistoryManager()
input_history.insert_input_events(input_history.text_to_input_history_events("Insert a new sentence. \n", "insert a new sentence"))
input_history.insert_input_events(input_history.text_to_input_history_events("Insert a second sentence. \n", "insert a second sentence"))
input_history.insert_input_events(input_history.text_to_input_history_events("Insert a third sentence.", "insert a third sentence"))
input_history.cursor_position_tracker.text_history = """Insert a new sentence. 
Insert a second """ + _CURSOR_MARKER + """sentence. 
Insert a third sentence."""

print( "With a filled input history")
print( "    Move a word left...")
input_history.apply_key("ctrl-left")
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True)
print( "        Expect cursor line index to be 1", cursor_index[0] == 1)
print( "        Expect coarse character index to be before the word second (17)", cursor_index[1] == 17)
print( "    Moving a word right...")
input_history.apply_key("ctrl-right")
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True)
print( "        Expect cursor line index to be 1", cursor_index[0] == 1)   
print( "        Expect coarse character index to be after the word second (11)", cursor_index[1] == 11)
print( "    Moving two words to the left...")
input_history.apply_key("ctrl-left:2") 
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True)
print( "        Expect cursor line index to be 1", cursor_index[0] == 1)
print( "        Expect coarse character index to be after the word a (7)", cursor_index[1] == 19)
print( "    Moving three words to the right...")
input_history.apply_key("ctrl-right:3") 
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True)
print( "        Expect cursor line index to be 1", cursor_index[0] == 1)
print( "        Expect coarse character index to be after the word sentence (1)", cursor_index[1] == 1)
print( "    Moving one more word to the right to simulate a line end transfer...")
input_history.apply_key("ctrl-shift-right") 
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True)
print( "        Expect cursor line index to be 2", cursor_index[0] == 2)
print( "        Expect coarse character index to be after the word insert (18)", cursor_index[1] == 18)
print( "    Moving one more word to the left to simulate moving to the first word on the third sentence...")
input_history.apply_key("ctrl-shift-left")
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True)
print( "        Expect cursor line index to be 2", cursor_index[0] == 2)
print( "        Expect coarse character index to be before the word insert (24)", cursor_index[1] == 24)
print( "    Moving one more word to the left to simulate a line end transfer...")
input_history.apply_key("ctrl-shift-left")
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True) 
print( "        Expect cursor line index to be 1", cursor_index[0] == 1 )
print( "        Expect coarse character index to be before the word sentence (10)", cursor_index[1] == 10)
print( "    Pressing home to go to the start of the second sentence...")
input_history.apply_key("home")  
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True) 
print( "        Expect cursor line index to be 1", cursor_index[0] == 1)
print( "        Expect coarse character index to be before the word insert (26)", cursor_index[1] == 26)
print( "    Pressing up to go to the first sentence...")
input_history.apply_key("up")
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True) 
print( "        Expect cursor line index to be 0", cursor_index[0] == 0, cursor_index[0] == 0)
print( "    Pressing down twice to go to the third sentence...")
input_history.apply_key("down:2")
cursor_index = input_history.cursor_position_tracker.get_cursor_index(True) 
print( "        Expect cursor line index to be 2", cursor_index[0] == 2)
