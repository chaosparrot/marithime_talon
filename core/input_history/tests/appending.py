from ..cursor_position_tracker import CursorPositionTracker
from ..input_history import InputHistoryManager
from ..input_history_typing import InputHistoryEvent

print( "Input history event" )

input_history = InputHistoryManager()
print( "    Expect event without phrase is expected phrase", input_history.text_to_input_history_events("Insert")[0].phrase == "insert")
print( "    Expect event with special characters without phrase with added whitespace is expected phrase", input_history.text_to_input_history_events(" Insert ")[0].phrase == "insert")
print( "    Expect event with special characters without phrase is expected phrase", input_history.text_to_input_history_events("Insert;.-=()")[0].phrase == "insert")
print( "    Expect event with special characters with phrase is expected phrase", input_history.text_to_input_history_events("Insert;.", "insert semi dot")[0].phrase == "insert semi dot")
print( "    Expect line ending to insert two events", len(input_history.text_to_input_history_events("\n")) == 2) 
print( "    Expect line ending to insert empty phrase event", input_history.text_to_input_history_events("\n")[0].phrase == "")

print( "Appending to history test")
print( "    Inserting text into a clean input history...")
input_history.insert_input_events(input_history.text_to_input_history_events("Insert ", "insert"))
print( "        Expect history length is 1", len(input_history.input_history) == 1)
cursor_index = input_history.cursor_position_tracker.get_cursor_index()
print( "        Expect cursor line index to be 0", cursor_index[0] == 0)
print( "        Expect cursor character index to be 0", cursor_index[1] == 0)
input_index = input_history.determine_input_index()
print( "        Expect input index to be 0", input_index[0] == 0)
print( "        Expect input character index to the last input events length (7)", input_index[1] == 7 )
print( "    After adding another input event")
input_history.insert_input_events(input_history.text_to_input_history_events("another word ", "another word"))
print( "        Expect history length is 2", len(input_history.input_history) == 2)
cursor_index = input_history.cursor_position_tracker.get_cursor_index()
print( "        Expect cursor line index to be 0", cursor_index[0] == 0)
print( "        Expect cursor character index to be 0", cursor_index[1] == 0)
input_index = input_history.determine_input_index()
print( "        Expect input index to be 1", input_index[0] == 1 )
print( "        Expect input character index to be equal to the last input events length (13)", input_index[1] == 13 )
print( "    After adding another input event")
input_history.insert_input_events(input_history.text_to_input_history_events("until it is a valid sentence.", "until it is a valid sentence"))
print( "        Expect history length is 3", len(input_history.input_history) == 3)
cursor_index = input_history.cursor_position_tracker.get_cursor_index()
print( "        Expect cursor line index to be 0", cursor_index[0] == 0)
print( "        Expect cursor character index to be 0", cursor_index[1] == 0)
input_index = input_history.determine_input_index()
print( "        Expect input index to be 2", input_index[0] == 2 )
print( "        Expect input character index to be equal to the last input events length (29)", input_index[1] == 29 )
print( "    After adding a line break")
input_history.insert_input_events(input_history.text_to_input_history_events("\n"))
print( "        Expect history length is 5", len(input_history.input_history) == 5)
cursor_index = input_history.cursor_position_tracker.get_cursor_index()
print( "        Expect cursor line index to be 1", cursor_index[0] == 1)
print( "        Expect cursor character index to be 0", cursor_index[1] == 0) 
input_index = input_history.determine_input_index()
print( "        Expect input index to be 4", input_index[0] == 4 ) 
print( "        Expect input character index to be equal to the last input events length (0)", input_index[1] == 0 )
print( "    After adding another input event after the line break")
input_history.insert_input_events(input_history.text_to_input_history_events("This is the second sentence.", "this is the second sentence"))
print( "        Expect history length is 5", len(input_history.input_history) == 5)
cursor_index = input_history.cursor_position_tracker.get_cursor_index()
print( "        Expect cursor line index to be 1", cursor_index[0] == 1)
print( "        Expect cursor character index to be 0", cursor_index[1] == 0)
input_index = input_history.determine_input_index() 
print( "        Expect input index to be 4", input_index[0] == 4 )
print( "        Expect input character index to be equal to the last input events length (28)", input_index[1] == 28 )