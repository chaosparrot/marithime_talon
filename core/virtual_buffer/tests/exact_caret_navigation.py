from ..buffer import VirtualBuffer
from ...utils.test import create_test_suite
from ..indexer import text_to_virtual_buffer_tokens

def test_single_line_exact_caret_navigation(assertion):
    vb = VirtualBuffer()
    vb.caret_tracker.system = "Windows"
    vb.caret_tracker.is_macos = False    
    vb.insert_tokens(text_to_virtual_buffer_tokens("Insert ", "insert"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("a ", "a"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("new ", "new"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("word.", "word"))

    assertion( "Navigating between tokens on a single line")
    assertion( "    Navigating to the end of the first token...")
    keys = vb.go_phrase("insert")
    assertion( "        Expect buffer length to stay the same (4)", len(vb.tokens) == 4)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 0", caret_index[0] == 0)
    assertion( "        Expect caret character index to be the end of the first word", caret_index[1] == 11)
    assertion( "    Navigating to the start of the first token...") 
    keys = vb.go_phrase("insert", "start") 
    assertion( "        Expect left to be pressed 7 times", keys[0] == "left:7")
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 0", caret_index[0] == 0)
    assertion( "        Expect caret character index to be the start of the first word", caret_index[1] == 18)
    assertion( "    Navigating to the start of the third token...")
    keys = vb.go_phrase("new", "start")
    assertion( "        Expect right to be pressed 9 times", keys[0] == "right:9")
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 0", caret_index[0] == 0)
    assertion( "        Expect caret character index to be the start of the third word", caret_index[1] == 9)
    assertion( "    Navigating to the end of the last token...") 
    keys = vb.go_phrase("word", "end")
    assertion( "        Expect right to be pressed 9 times", keys[0] == "right:9")
    caret_index = vb.caret_tracker.get_caret_index() 
    assertion( "        Expect caret line index to be 0", caret_index[0] == 0)
    assertion( "        Expect caret character index to be the end of the sentence", caret_index[1] == 0)
    assertion( "    Navigating to a non-existing token...") 
    keys = vb.go_phrase("bee", "end")
    assertion( "        Expect no keys to be pressed", keys is None)
    caret_index = vb.caret_tracker.get_caret_index() 
    assertion( "        Expect caret index to be the same", caret_index == (0, 0))

def test_multi_line_exact_caret_navigation(assertion):
    vb = VirtualBuffer()
    vb.caret_tracker.system = "Windows"
    vb.caret_tracker.is_macos = False
    vb.insert_tokens(text_to_virtual_buffer_tokens("Insert ", "insert"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("a ", "a"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("new ", "new"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("word.", "word"))
    vb.go_phrase("insert")
    vb.go_phrase("insert", "start")
    vb.go_phrase("new", "start")
    vb.go_phrase("word", "end")
    vb.go_phrase("bee", "end")

    vb.insert_tokens(text_to_virtual_buffer_tokens("\n", ""))
    vb.insert_tokens(text_to_virtual_buffer_tokens("Append ", "append"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("a ", "a"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("new ", "new"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("sentence.", "sentence"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("\n", ""))
    vb.insert_tokens(text_to_virtual_buffer_tokens("Add ", "add"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("a ", "a"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("final ", "final"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("line.", "line"))
    assertion( "Navigating between tokens on multiple lines")
    assertion( "    Navigating to the end of the second sentence...")
    keys = vb.go_phrase("sentence") 
    assertion( "        Expect up to be pressed once", "up" in keys)
    assertion( "        Expect end to be pressed at least once", "end" in keys)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 1", caret_index[0] == 1)
    assertion( "        Expect caret character index to be the end of the sentence", caret_index[1] == 0)
    assertion( "    Navigating to the end of the final sentence...")
    keys = vb.go_phrase("line")
    assertion( "        Expect down to be pressed once", "down" in keys)
    assertion( "        Expect end to be pressed at least once", "end" in keys)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 2", caret_index[0] == 2)
    assertion( "        Expect caret character index to be the end of the sentence", caret_index[1] == 0)
    assertion( "    Navigating to the end of the first token...")   
    keys = vb.go_phrase("insert")
    assertion( "        Expect up to be pressed two times", "up:2" in keys)
    assertion( "        Expect end to be pressed at least once", "end" in keys)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 0", caret_index[0] == 0)
    assertion( "        Expect caret character index to be the end of the first word", caret_index[1] == 11)
    assertion( "    Navigating to the end of the third word on the final sentence...")
    keys = vb.go_phrase("final")
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect down to be pressed two times", "down:2" in keys)
    assertion( "        Expect end to be pressed at least once", "end" in keys)
    assertion( "        Expect caret line index to be 2", caret_index[0] == 2)
    assertion( "        Expect caret character index to be the end of the third word", caret_index[1] == 5)
    assertion( "    Navigating to a non-existing token...") 
    keys = vb.go_phrase("bee", "end")
    assertion( "        Expect no keys to be pressed", keys is None)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret index to be the same", caret_index == (2, 5))

def test_multi_line_exact_caret_navigation_macos(assertion):
    vb = VirtualBuffer()
    vb.caret_tracker.system = "Darwin"
    vb.caret_tracker.is_macos = True
    vb.insert_tokens(text_to_virtual_buffer_tokens("Insert ", "insert"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("a ", "a"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("new ", "new"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("word.", "word"))
    vb.go_phrase("insert")
    vb.go_phrase("insert", "start")
    vb.go_phrase("new", "start")
    vb.go_phrase("word", "end")
    vb.go_phrase("bee", "end")

    vb.insert_tokens(text_to_virtual_buffer_tokens("\n", ""))
    vb.insert_tokens(text_to_virtual_buffer_tokens("Append ", "append"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("a ", "a"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("new ", "new"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("sentence.", "sentence"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("\n", ""))
    vb.insert_tokens(text_to_virtual_buffer_tokens("Add ", "add"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("a ", "a"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("final ", "final"))
    vb.insert_tokens(text_to_virtual_buffer_tokens("line.", "line"))
    assertion( "Navigating between tokens on multiple lines on MacOS")
    assertion( "    Navigating to the end of the second sentence...")
    keys = vb.go_phrase("sentence") 
    assertion( "        Expect up to be pressed once", "up" in keys)
    assertion( "        Expect CMD-right to be pressed at least once", "cmd-right" in keys)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 1", caret_index[0] == 1)
    assertion( "        Expect caret character index to be the end of the sentence", caret_index[1] == 0)
    assertion( "    Navigating to the end of the final sentence...")
    keys = vb.go_phrase("line")
    assertion( "        Expect down to be pressed once", "down" in keys)
    assertion( "        Expect CMD-right to be pressed at least once", "cmd-right" in keys)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 2", caret_index[0] == 2)
    assertion( "        Expect caret character index to be the end of the sentence", caret_index[1] == 0)
    assertion( "    Navigating to the end of the first token...")   
    keys = vb.go_phrase("insert")
    assertion( "        Expect up to be pressed two times", "up:2" in keys)
    assertion( "        Expect CMD-right to be pressed at least once", "cmd-right" in keys)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret line index to be 0", caret_index[0] == 0)
    assertion( "        Expect caret character index to be the end of the first word", caret_index[1] == 11)
    assertion( "    Navigating to the end of the third word on the final sentence...")
    keys = vb.go_phrase("final")
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect down to be pressed two times", "down:2" in keys)
    assertion( "        Expect CMD-right to be pressed at least once", "cmd-right" in keys)
    assertion( "        Expect caret line index to be 2", caret_index[0] == 2)
    assertion( "        Expect caret character index to be the end of the third word", caret_index[1] == 5)
    assertion( "    Navigating to a non-existing token...") 
    keys = vb.go_phrase("bee", "end")
    assertion( "        Expect no keys to be pressed", keys is None)
    caret_index = vb.caret_tracker.get_caret_index()
    assertion( "        Expect caret index to be the same", caret_index == (2, 5))

suite = create_test_suite("Exact caret navigation")
suite.add_test(test_single_line_exact_caret_navigation)
suite.add_test(test_multi_line_exact_caret_navigation)
suite.add_test(test_multi_line_exact_caret_navigation_macos)